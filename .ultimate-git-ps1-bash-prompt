# Customize BASH PS1 prompt to show current GIT repository and branch.
# Original from http://mediadoneright.com/content/ultimate-git-ps1-bash-prompt

# Regular Colors
_black_='\e[0;30m'
_red_='\e[0;31m'
_green_='\e[0;32m'
_yellow_='\e[0;33m'
_blue_='\e[0;34m'
_purple_='\e[0;35m'
_cyan_='\e[0;36m'
_white_='\e[0;37m'

# Bold
_bblack_='\e[1;30m'
_bred_='\e[1;31m'
_bgreen_='\e[1;32m'
_byellow_='\e[1;33m'
_bblue_='\e[1;34m'
_bpurple_='\e[1;35m'
_bcyan_='\e[1;36m'
_bwhite_='\e[1;37m'

# Underline
_ublack_='\e[4;30m'
_ured_='\e[4;31m'
_ugreen_='\e[4;32m'
_uyellow_='\e[4;33m'
_ublue_='\e[4;34m'
_upurple_='\e[4;35m'
_ucyan_='\e[4;36m'
_uwhite_='\e[4;37m'

# Background
_on_black_='\e[40m'
_on_red_='\e[41m'
_on_green_='\e[42m'
_on_yellow_='\e[43m'
_on_blue_='\e[44m'
_on_purple_='\e[45m'
_on_cyan_='\e[46m'
_on_white_='\e[47m'

# High Intensty
_iblack_='\e[0;90m'
_ired_='\e[0;91m'
_igreen_='\e[0;92m'
_iyellow_='\e[0;93m'
_iblue_='\e[0;94m'
_ipurple_='\e[0;95m'
_icyan_='\e[0;96m'
_iwhite_='\e[0;97m'

# Bold High Intensty
_biblack_='\e[1;90m'
_bired_='\e[1;91m'
_bigreen_='\e[1;92m'
_biyellow_='\e[1;93m'
_biblue_='\e[1;94m'
_bipurple_='\e[1;95m'
_bicyan_='\e[1;96m'
_biwhite_='\e[1;97m'

# High Intensty backgrounds
_on_iblack_='\e[0;100m'
_on_ired_='\e[0;101m'
_on_igreen_='\e[0;102m'
_on_iyellow_='\e[0;103m'
_on_iblue_='\e[0;104m'
_on_ipurple_='\e[10;95m'
_on_icyan_='\e[0;106m'
_on_iwhite_='\e[0;107m'

# Reset
_off_='\e[0m'

_short_git_status() {
    status_flags=$(git status --porcelain | sed 's/^\(..\).*$/\1/')
    staged_count=$(printf -- "$status_flags" | grep -c '^[AMD].' | sed s/0//)
    unstaged_count=$(printf -- "$status_flags" | grep -c '^.[AMD]' | sed s/0//)
    untracked_count=$(printf -- "$status_flags" | grep -c '??' | sed s/0//)
    is_dirty="${staged_count}${unstaged_count}${untracked_count}"

    black_dot="${_iblack_}Â·${_off_}"
    status_prompt=''
    # Staged.
    if [ -n "${staged_count}" ]; then
        status_prompt+="${_igreen_}${staged_count}${_off_}"
    fi
    # "Â·"
    if [ -n "${is_dirty}" ]; then
        status_prompt+="${black_dot}"
    fi
    # Unstaged.
    if [ -n "${unstaged_count}" ]; then
        status_prompt+="${_yellow_}${unstaged_count}${_off_}"
    fi
    # "Â·"
    if [ -n "${is_dirty}" ]; then
        status_prompt+="${black_dot}"
    fi
    # Untracked.
    if [ -n "${untracked_count}" ]; then
        status_prompt+="${_iblue_}${untracked_count}${_off_}"
    fi
    # " "
    if [ -n "${is_dirty}" ]; then
        status_prompt+=" "
    fi

    echo -ne "${status_prompt}"
}

_git_prompt() {
    git status | grep "nothing to commit" > /dev/null 2>&1
    is_repo_clean=$?
    if [ "$is_repo_clean" -eq 0 ]; then
        repo_state="${_green_}$(__git_ps1 "(%s)")${_off_}"
    else
        repo_state="${_ired_}$(__git_ps1 "{%s}")${_off_}"
    fi

    status_prompt=$(echo -n "$(_short_git_status)")
    repo_prompt="${repo_state} ${status_prompt}"

    echo -ne "${repo_prompt}"
}

_node_prompt() {
    node_version=$(node --version)
    if [ $NODE_ENV != 'development' ]; then
        node_env="${_iblack_}[${node_version} ${_yellow_}${NODE_ENV}${_iblack_}]${_off_}"
    else
        node_env="${_iblack_}[${node_version} ${NODE_ENV}]${_off_}"
    fi
    echo -ne "${node_env}"
}

_get_prompt() {
    # Get status early, before the first command.
    status=$?

    git branch &>/dev/null
    in_git_repo=$?

    # Date
    hour="${_iblack_}$(date +"%H:%M:%S")${_off_}"

    # Path
    path="$(dirs +0)"

    # Error
    error_dot=
    if [ $status -eq 130 ]; then
        # ^C
        error_dot=" ${_iyellow_}ðŸ—™${_off_} "
    elif [ $status -ne 0 ]; then
        error_dot=" ${_ired_}â¬¤${_off_} "
    fi

    node_prompt=$(echo -n "$(_node_prompt)")

    if [ "$in_git_repo" -eq 0 ]; then
        git_prompt=$(echo -n "$(_git_prompt)")
        path_prompt="${_byellow_}${path}${_off_}"
    else
        git_prompt=''
        path_prompt="${_yellow_}${path}${_off_}"
    fi

    echo -e "${hour} ${git_prompt}${path_prompt} ${node_prompt}${error_dot}\n\$ "
}

export PS1='$(_get_prompt)'
